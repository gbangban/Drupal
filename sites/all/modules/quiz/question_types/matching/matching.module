<?php
// $Id: matching.module,v 1.2.2.6 2010/01/26 14:21:08 falcon Exp $

/**
 * @file
 * Matching question type for quiz module
 *
 * Allows the creation of matching questions, which associate one term
 * with another
 */


/**
 * Implementation of hook_node().
 */
/*
function matching_node_info() {
  return array('matching' => array('name' => t('matching'), 'base' => 'matching'));
}*/

/**
 * Implementation of hook_help().
 */
function matching_help($path, $args) {
  switch ($path) {
    case 'admin/modules#description':
      return t('Matching question type for quiz module.');
    case 'node/add#matching':
    case 'admin/help#matching':
      return t('A question type for the quiz module: allows you to create matching type questions, which connect terms with one another.');
    default:
      break;
  }
}

/**
 * Implementation of hook_quiz_question_info().
 */
function matching_quiz_question_info() {
  return array(
    'matching' => array(
      'name' => t('Matching'),
      'description' => t('Matching question type for quiz module. A question type for the quiz module: allows you to create matching type questions, which connect terms with one another.'),
      'question provider' => 'MatchingQuestion',
      'response provider' => 'MatchingResponse',
      'module' => 'quiz_question', // All wrapper functions are in that module.
    ),
  );
}


function matching_config() {
  $form['quiz_matching_form_size'] = array(
    '#type' => 'textfield',
    '#title' => t('Match Question Size'),
    '#description' => t('Number of question allowed to wrap under a match type question.'),
    '#default_value' => variable_get('quiz_matching_form_size', 5),
  );
  $form['quiz_matching_shuffle_options'] = array(
    '#type' => 'checkbox',
    '#title' => t('Shuffle Matching Options'),
    '#default_value' => variable_get('quiz_matching_shuffle_options', TRUE),
    '#description' => t('If checked matching options will be shuffled'),
  );
  return $form;
}

/**
 * Implementation of hook_autoload_info().
 */
function matching_autoload_info() {
  return array(
    'MatchingQuestion' => array('file' => 'matching.classes.inc'),
    'MatchingResponse' => array('file' => 'matching.classes.inc'),
  );
}

/**
 * Implementation of hook_theme().
 */
function matching_theme() {
  return array(
    'matching_question_form' => array(
      'arguments' => array('form' => NULL),
      'file' => 'matching.theme.inc',
    ),
    /*'long_answer_feedback' => array(
      'arguments' => array('quiz' => NULL, 'report' => NULL),
      'file' => 'long_answer.theme.inc',
    ),
    'long_answer_view_unscored' => array(
      'arguments' => array('unscored' => array()),
      'file' => 'long_answer.admin.inc',
    ),*/
  );
}
/*
// Temporary holding place for list_questions hook
function matching_list_questions() {
  return array();
}
*/

/*
 * @function
 * To generate a list of short answer questions node
 * @return
 * array containing nid as key and title as value
 */
function matching_questions_list() {
  $questions = array();
  $type = 'matching';
  $sql = "SELECT nid, title FROM {node} WHERE type = '%s'";
  $results = db_query($sql, $type);
  while ($result = db_fetch_object($results)) {
    $questions[$result->nid] = check_plain($result->title);
  }
  return $questions;
}
